k8s {
   namespace = 'medgen-ns'
   runAsUser = 1000
   storageClaimName = 'pvc-janlambshare-storage-elixir1-cerit-sc-cz'
   homeDir = "/mnt/shared/MedGen/nanobreak/src/pipeline"

   launchDir = "${k8s.homeDir}/launch"
   projectDir = "${k8s.homeDir}/project"
   workDir = "${k8s.homeDir}/temp"
//   useJobs = true
 //  pullPolicy = 'IfNotPresent'
   pullPolicy = 'Always'
   storageMountPath = '/mnt'
   pod = [ [volumeClaim: 'pvc-jans-elixir-share', mountPath: "/storage" ]]
//   computeResourceType = 'Job'
}

params {
   outDir = '/storage/share/110000-MED/999999-gic/01.NanoBreak/data/samples'
     launchDir = '/mnt/shared/MedGen/nanobreak/src/nextflow2/launch'
     refFlat = "${k8s.projectDir}/xsvato01/nanopore_k8s/bin/refFlatNoChr.txt"
     ComputeDistance = "${k8s.projectDir}/xsvato01/nanopore_k8s/bin/ComputeDistance.py"

   data = '/mnt/shared/MedGen/ONTdata/Sabina_HMW/BRNO1837/1837_sre_fra_lig_flg/20221011_1137_MN16014_amb036_7ac7046a/fastq_pass'
   calcdist =  "${k8s.projectDir}/xsvato01/nanopore_k8s/bin/ComputeDistance.py"
   ref = '/mnt/shared/999993-Bioda/data/ssd_3/references/homsap/GRCh37-p13/seq/GRCh37-p13.fa'
}


executor {
   queueSize = 15
}

process {

   withLabel: big_mem {
        memory = 80.GB
    }


   withLabel: big_cpus {
        cpus = 32
    }


   shell = ['/bin/bash', '-euo', 'pipefail']
   container = 'registry.gitlab.ics.muni.cz:443/450402/nanopore_k8s:latest'
   scratch = true
   executor = 'k8s'
   cpus = 8
   memory = '16GB'
   pod = [[securityContext:[fsGroupChangePolicy:'OnRootMismatch', runAsUser:1000, runAsGroup:1, fsGroup:1]], [nodeSelector:'storage=local-ssd']]
   cleanup = true
}

manifest {
  defaultBranch = 'main'
}
